AWSTemplateFormatVersion: '2010-09-09'
Description: Application Container on ECS cluster

Parameters:
  ECRImageTag:
    Type: String
    Default: latest

Resources:
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: hello_sinatra
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: hellosinatra_web
          Image: !Join [':', [!ImportValue HelloSinatraWebRepositoryUrl, !Ref ECRImageTag]]
          Environment:
          - Name: RACK_ENV
            Value: production
          PortMappings:
            - ContainerPort: 4567
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'hello_sinatra'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'hello-sinatra-web'

  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - WebListenerRule
    Properties:
      TaskDefinition: !Ref Task
      ServiceName: hello-sinatra
      Cluster: !ImportValue 'ECSCluster'
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
          - !ImportValue Subnet1
          - !ImportValue Subnet2
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: hellosinatra_web
          ContainerPort: 4567
          TargetGroupArn: !Ref WebTargetGroup

  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue 'VPC'
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /status
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  WebListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue Listener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /*
      Actions:
        - TargetGroupArn: !Ref WebTargetGroup
          Type: forward

Outputs:
  AppEndpoint:
    Description: Hello Sinatra Endpoint
    Value: !Join ['', ['http://', !ImportValue DomainName, '/']]
  RunningVersionWeb:
    Description: Hello Sinatra Web Current Version
    Value: !Ref ECRImageTag
